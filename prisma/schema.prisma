generator client {
image String?


// Local auth
passwordHash String? // null if OAuthâ€‘only


// RBAC (simple)
role Role @default(USER)


accounts Account[]
sessions Session[]


createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
}


enum Role {
USER
ADMIN
}


model Account {
id String @id @default(cuid())
userId String
type String
provider String
providerAccountId String
refresh_token String? // OAuth optional
access_token String?
expires_at Int?
token_type String?
scope String?
id_token String?
session_state String?


user User @relation(fields: [userId], references: [id], onDelete: Cascade)


@@unique([provider, providerAccountId])
}


model Session {
id String @id @default(cuid())
sessionToken String @unique
userId String
expires DateTime


user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model VerificationToken {
identifier String
token String @unique
expires DateTime


@@unique([identifier, token])
}